<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="com.webservice.understand.webservice.bean.User"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="com.webservice.understand.webservice.service.UserDaoService"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="org.springframework.web.servlet.support.ServletUriComponentsBuilder"/>
<fullyQualifiedTypeName name="java.net.URI"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ResponseStatus"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ControllerAdvice"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
<fullyQualifiedTypeName name="java.util.Date"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
<fullyQualifiedTypeName name="java.util.Iterator"/>
<fullyQualifiedTypeName name="com.webservice.understand.webservice.exception.UserNotFoundException"/>
<fullyQualifiedTypeName name="org.springframework.hateoas.Resource"/>
<fullyQualifiedTypeName name="org.springframework.hateoas.mvc.ControllerLinkBuilder"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="springfox.documentation.swagger2.annotations.EnableSwagger2"/>
<fullyQualifiedTypeName name="springfox.documentation.spring.web.plugins.Docket"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="springfox.documentation.spi.DocumentationType"/>
<fullyQualifiedTypeName name="java.util.HashSet"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="io.swagger.annotations.ApiModel"/>
<fullyQualifiedTypeName name="io.swagger.annotations.ApiModelProperty"/>
<fullyQualifiedTypeName name="javax.annotation.Generated"/>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
<fullyQualifiedTypeName name="org.springframework.boot.context.properties.ConfigurationProperties"/>
<fullyQualifiedTypeName name="com.webservice.limitsservice.configuration.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="javax.persistence.Column"/>
<fullyQualifiedTypeName name="com.sun.istack.Nullable"/>
<fullyQualifiedTypeName name="javax.persistence.Transient"/>
<fullyQualifiedTypeName name="com.webservice.currencyexchangeservice.vo.ExchangeValue"/>
<fullyQualifiedTypeName name="com.webservice.currencyexchangeservice.repository.ExchangeRepository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="java.math.BigDecimal"/>
<fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
<fullyQualifiedTypeName name="com.webservice.currencyconversionservice.vo.CurrencyConvertionBean"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.ribbon.RibbonClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
</qualifiedTypeNameHistroy>
